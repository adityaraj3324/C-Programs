Q1. 			return and no argument 
====================================================================
functions :
int 
char 
float

#include <stdio.h>
int show();
char adi();
float num();
int main()
{
    printf("%d\n",show());
    printf("%c\n",adi());
    printf("%f\n",num());
    return 0;
}
int show(){
    int a=9;
    return a;
}
char adi(){
    char a='n';
    return a;
}
float num(){
    float n=4.37;
    return n;
}
------------------------------------------

Q2. 
add()
sub()
multi()
div()
mod()

#include<stdio.h>

int add();
int sub();
int multi();
int divi();
int mod();

int main() {
     printf("%d\n",add());
      printf("%d\n",sub());
     printf("%d\n",multi());
      printf("%d\n",divi());
       printf("%d\n",mod());
    
	

	return 0;
}

 int add() {
	int a,b;
	a=5,b=9;
	int sum=a+b;
	printf(" addition is:");
	return sum;
}
int  sub() {
	int a,b;
	a=15,b=9;
	int sub=a-b;
	printf(" subtraction is:");
	return sub;
}
int multi() {
	int a,b;
	a=15,b=9;
	int multi=a*b;
	printf(" multipication is:");
	return multi;
}
int  divi() {
	int a,b;
	a=15,b=3;
	int divi=a/b;
	printf(" division is:");
	return divi;
}
int mod() {
	int a,b;
	a=15,b=9;
	int mod=a%b;
	printf(" modulus is:");
	return mod;
}

 
------------------------------------------
Q3.
a : add() 
s : sub()
m :multi()
o :mod() 
d :div()

#include<stdio.h>

int add();
int sub();
int multi();
int divi();
int mod();

int main() {
    char ch;
    printf("enter a character:");
    scanf("%c",&ch);
    if(ch=='a'){

     printf("%d\n",add());
    }
    else if(ch=='s'){
      printf("%d\n",sub());
    }
    else if(ch=='m'){
     printf("%d\n",multi());
    }
    else if(ch=='d'){
      printf("%d\n",divi());
    }
    else if(ch=='M'){
       printf("%d\n",mod());
    }else{
        
        printf("invalid");
    }
	return 0;
}

 int add() {
	int a,b;
	a=5,b=9;
	int sum=a+b;
	printf(" addition is:");
	return sum;
}
int  sub() {
	int a,b;
	a=15,b=9;
	int sub=a-b;
	printf(" subtraction is:");
	return sub;
}
int multi() {
	int a,b;
	a=15,b=9;
	int multi=a*b;
	printf(" multipication is:");
	return multi;
}
int  divi() {
	int a,b;
	a=15,b=3;
	int divi=a/b;
	printf(" division is:");
	return divi;
}
int mod() {
	int a,b;
	a=15,b=9;
	int mod=a%b;
	printf(" modulus is:");
	return mod;
}



----------------------------------------------------------------
Q4. 
s :swap() 
a :Armstrong()
p :palindrome()
r :reverse()
f :factorial()
b :Fibonacci()
t :table() 

#include<stdio.h>

  int swap();
  int Armstrong();
  int palindrome();
  int reverse();
  int factorial();
  int Fibonacci();
  int table();
  
  int main(){
      char ch;
      printf("enter a character:");
      scanf("%c",&ch);
      if(ch=='s'){
        printf("%d\n",swap());
          
      }
      else if(ch=='a'){
       printf("%d\n",Armstrong());
      }
      else if(ch=='p'){
      printf("%d\n",palindrome()); 
      }
      else if(ch=='r'){
       printf("%d\n",reverse());
      }
      else if(ch=='f'){
      printf("%d\n",factorial()); 
      }
      else if(ch=='F'){
      printf("%d\n",Fibonacci()); 
      }
      else if(ch=='t'){
      printf("%d\n",table());
          
      }
  
  } 
  
   int swap() {
       int a,b,c;
       a=5,b=9;
       
     c=a;
     a=b;
     b=c;
    printf(" swapping: a = %d, b = %d\n", a, b);
     return 0;   
    }

  int Armstrong(){
      int num=153;
int rem,sum=0;
int temp=num;
while(num>0){
rem=num%10;
sum=sum+rem*rem*rem;
num=num/10;

}
printf(" %d\n",sum);
if(sum==temp){
printf("Armstrong");
}else{
printf("is not Armstrong");
}
return sum;
  }
  int palindrome(){
     
      int num=12321;
int rem,sum=0;
int temp=num;
while(num>0){
rem=num%10;
sum=sum*10+rem;
num=num/10;
}
 printf("%d\n",sum);
if(sum==temp){
printf("palindrom");

}else{
printf("is not palindrom");
}
return 0;
  }
  int reverse(){
      int num=342427;
    int rem,sum=0;
    while(num>0){
        rem=num%10;
        sum=sum*10+rem;
        num=num/10;
    }
    printf("%d",sum);
return sum;
  }
  int factorial(){
      int n=1;
      int fact=1;
      while(n<=5){
          fact=fact*n;
          n++;
      }
      printf(" factorial is:%d",fact);
      return fact;
  }
  int Fibonacci(){
      int x=0,y=1,z;
      
      for(int i=1;i<=10;i++){
      z=x+y;
      printf("%d\n",x);
      x=y;
      y=z;
      }
      return x;
  }
  int table(){
      int x,y;
      x=1;
      y=2;
      while(x<=10){

      printf("%d\n",y*x);
      x++;
      } 
   return 0;
  }

================================================================

Q5. 
return and argument 


functions :
int 
char 
float

#include <stdio.h>
int show(int a);
char adi(char a);
float num(float n);
int main()
{
    printf("%d\n",show(9));
    printf("%c\n",adi('n'));
    printf("%f\n",num(5.34));
    return 0;
}
int show(int a){
    
    return a;
}
char adi(char a){
    
    return a;
}
float num(float n){

    return n;
}

------------------------------------------
Q6. 
add()
sub()
multi()
div()
mod() 

#include<stdio.h>

int add(int a,int b);
int sub(int a,int b);
int multi(int a,int b);
int divi(int a,int b);
int mod(int a,int b);

int main() {
     printf("%d\n",add(7,9));
      printf("%d\n",sub(15,9));
     printf("%d\n",multi(6,7));
      printf("%d\n",divi(15,3));
       printf("%d\n",mod(22,4));
    
	

	return 0;
}

 int add(int a,int b) {
	
	int sum=a+b;
	printf(" addition is:");
	return sum;
}
int  sub(int a,int b) {
	
	int sub=a-b;
	printf(" subtraction is:");
	return sub;
}
int multi(int a, int b) {
	
	int multi=a*b;
	printf(" multipication is:");
	return multi;
}
int  divi(int a,int b) {
	
	int divi=a/b;
	printf(" division is:");
	return divi;
}
int mod(int a,int b) {
	
	int mod=a%b;
	printf(" modulus is:");
	return mod;
}


------------------------------------------
Q7. 
a : add() 
s : sub()
m :multi()
o :mod() 
d :div()

#include<stdio.h>

int add(int a, int b);
int sub(int a, int b);
int multi(int a, int b);
int divi(int a, int b);
int mod(int a, int b);

int main() {
    char ch;
    printf("enter a character:");
    scanf("%c",&ch);
    if(ch=='a'){

     printf("%d\n",add(9,8));
    }
    else if(ch=='s'){
      printf("%d\n",sub(32,14));
    }
    else if(ch=='m'){
     printf("%d\n",multi(7,9));
    }
    else if(ch=='d'){
      printf("%d\n",divi(33,3));
    }
    else if(ch=='M'){
       printf("%d\n",mod(23,4));
    }else{
        
        printf("invalid");
    }
	return 0;
}

 int add(int a, int b) {
	
	int sum=a+b;
	printf(" addition is:");
	return sum;
}
int  sub(int a, int b) {
	
	int sub=a-b;
	printf(" subtraction is:");
	return sub;
}
int multi(int a, int b) {

	int multi=a*b;
	printf(" multipication is:");
	return multi;
}
int  divi(int a, int b) {
	
	int divi=a/b;
	printf(" division is:");
	return divi;
}
int mod(int a, int b) {
	
	int mod=a%b;
	printf(" modulus is:");
	return mod;
}


----------------------------------------------------------------
Q8.
s :swap() 
a :Armstrong()
p :palindrome()
r :reverse()
f :factorial()
b :Fibonacci()
t :table() 

#include<stdio.h>

  int swap(int a,int b);
  int Armstrong(int num);
  int palindrome(int num);
  int reverse(int num);
  int factorial(int n);
  int Fibonacci(int x,int y);
  int table(int x);
  
  int main(){
      char ch;
      printf("enter a character:");
      scanf("%c",&ch);
      if(ch=='s'){
        printf("%d\n",swap(6,9));
          
      }
      else if(ch=='a'){
       printf("%d\n",Armstrong(153));
      }
      else if(ch=='p'){
      printf("%d\n",palindrome(1223221)); 
      }
      else if(ch=='r'){
       printf("%d\n",reverse(46278));
      }
      else if(ch=='f'){
      printf("%d\n",factorial(1)); 
      }
      else if(ch=='F'){
      printf("%d\n",Fibonacci(0,1)); 
      }
      else if(ch=='t'){
      printf("%d\n",table(1));
          
      }
  
  } 
  
   int swap(int a,int b) {
       int c;
       
     c=a;
     a=b;
     b=c;
    printf(" swapping: a = %d, b = %d\n", a, b);
     return 0;   
    }

  int Armstrong(int num){
      
int rem,sum=0;
int temp=num;
while(num>0){
rem=num%10;
sum=sum+rem*rem*rem;
num=num/10;

}
printf(" %d\n",sum);
if(sum==temp){
printf("Armstrong");
}else{
printf("is not Armstrong");
}
return sum;
  }
  int palindrome(int num){
     
     
int rem,sum=0;
int temp=num;
while(num>0){
rem=num%10;
sum=sum*10+rem;
num=num/10;
}
 printf("%d\n",sum);
if(sum==temp){
printf("palindrom");

}else{
printf("is not palindrom");
}
return 0;
  }
  int reverse(int num){
     
    int rem,sum=0;
    while(num>0){
        rem=num%10;
        sum=sum*10+rem;
        num=num/10;
    }
    printf("%d",sum);
return sum;
  }
  int factorial(int n){
      
      int fact=1;
      while(n<=5){
          fact=fact*n;
          n++;
      }
      printf(" factorial is:%d\n",fact);
      return fact;
  }
  int Fibonacci(int x,int y){
      int z;
      
      for(int i=1;i<=10;i++){
      z=x+y;
      printf("%d\n",x);
      x=y;
      y=z;
      }
      return x;
  }
  int table(int x){
      int y;
      
      y=2;
      while(x<=10){

      printf("%d\n",y*x);
      x++;
      } 
   return 0;
  }
------------------------------------------------------------------------------------



