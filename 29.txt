Q:1
			no return and no argument 
add()
sub()
multi()
div()
mod()


#include<stdio.h>

void add();
void sub();
void multi();
void divi();
void mod();

int main() {
	add();
	sub();
	multi();
	divi();
	mod();

	return 0;
}

void add() {
	int a,b;
	a=5,b=9;
	int sum=a+b;
	printf(" addition is: %d\n",sum);
}
void sub() {
	int a,b;
	a=15,b=9;
	int sub=a-b;
	printf(" subtraction is: %d\n",sub);
}
void multi() {
	int a,b;
	a=15,b=9;
	int multi=a*b;
	printf(" multipication is: %d\n",multi);
}
void divi() {
	int a,b;
	a=15,b=3;
	int divi=a/b;
	printf(" division is: %d\n",divi);
}
void mod() {
	int a,b;
	a=15,b=9;
	int mod=a%b;
	printf(" modulus is: %d\n",mod);
}

--------------------------------------------------------------------------------------------------

Q2. 
a : add() 
s : sub()
m :multi()
o :mod() 
d :div()



#include<stdio.h>

void add();
void sub();
void multi();
void divi();
void mod();

int main() {
    char ch;
    printf("enter a character:");
    scanf("%c",&ch);
    if(ch=='a'){
	add();
        
    }
    else if(ch=='s'){
	sub();
    }
    else if(ch=='m'){
	multi();
    }
    else if(ch=='d'){
	divi();
    }
    else if(ch=='M'){
	mod();
    }
    else{
        printf("invalid");
    }
	return 0;
}
void add() {
	int a,b;
	a=5,b=9;
	int sum=a+b;
	printf(" addition is: %d\n",sum);
}
void sub() {
	int a,b;
	a=15,b=9;
	int sub=a-b;
	printf(" subtraction is: %d\n",sub);
}
void multi() {
	int a,b;
	a=15,b=9;
	int multi=a*b;
	printf(" multipication is: %d\n",multi);
}
void divi() {
	int a,b;
	a=15,b=3;
	int divi=a/b;
	printf(" division is: %d\n",divi);
}
void mod() {
	int a,b;
	a=15,b=9;
	int mod=a%b;
	printf(" modulus is: %d\n",mod);
}
----------------------------------------------------------------------------------------------

Q3. 
s :swap() 
a :Armstrong()
p :palindrome()
r :reverse()
f :factorial()
b :Fibonacci()
t :table() 

#include<stdio.h>

  void swap();
  void Armstrong();
  void palindrome();
  void reverse();
  void factorial();
  void Fibonacci();
  void table();
  
  int main(){
      char ch;
      printf("enter a character:");
      scanf("%c",&ch);
      if(ch=='s'){
          swap();
          
      }
      else if(ch=='a'){
       Armstrong();
      }
      else if(ch=='p'){
       palindrome();
      }
      else if(ch=='r'){
       reverse();
      }
      else if(ch=='f'){
       factorial();
      }
      else if(ch=='F'){
       Fibonacci();
      }
      else if(ch=='t'){
      table();
          
      }
  
  } 
  
   void swap() {
       int a,b,c;
       a=5,b=9;
       
     c=a;
     a=b;
     b=c;
    printf(" swapping: a = %d, b = %d\n", a, b);
        
    }

  void Armstrong(){
      int num=153;
int rem,sum=0;
int temp=num;
while(num>0){
rem=num%10;
sum=sum+rem*rem*rem;
num=num/10;
}
printf(" %d\n",sum);
if(sum==temp){
printf("Armstrong");
}else{
printf("is not Armstrong");
}

  }
  void palindrome(){
     
      int num=12321;
int rem,sum=0;
int temp=num;
while(num>0){
rem=num%10;
sum=sum*10+rem;
num=num/10;
}
 printf("%d\n",sum);
if(sum==temp){
printf("palindrom");

}else{
printf("is not palindrom");
}

  }
  void reverse(){
      int num=342427;
    int rem,sum=0;
    while(num>0){
        rem=num%10;
        sum=sum*10+rem;
        num=num/10;
    }
    printf("%d",sum);

  }
  void factorial(){
      int n=1;
      int fact=1;
      while(n<=5){
          fact=fact*n;
          n++;
      }
      printf(" factorial is:%d",fact);
  }
  void Fibonacci(){
      int x=0,y=1,z;
      printf("%d\n%d\n",x,y);
      for(int i=1;i<=10;i++){
      z=x+y;
      printf("%d\n",z);
      x=y;
      y=z;
      }
  }
  void table(){
      int x,y;
      x=1;
      y=2;
      while(x<=10){

      printf("%d\n",y*x);
      x++;
      } 

  }
--------------------------------------------------------------------------------------------------------------------------------

Q4. 			no return and argument 
add()
sub()
multi()
div()
mod()



#include<stdio.h>

void add(int a,int b);
void sub(int a,int b);
void multi(int a,int b);
void divi(int a,int b);
void mod(int a,int b);

int main() {
	add(5,8);
	sub(15,6);
	multi(5,8);
	divi(15,3);
	mod(16,3);

	return 0;
}

void add(a,b) {
	int sum=a+b;
	printf(" addition is: %d\n",sum);
}
void sub(a,b) {
	
	int sub=a-b;
	printf(" subtraction is: %d\n",sub);
}
void multi(a,b) {
	
	int multi=a*b;
	printf(" multipication is: %d\n",multi);
}
void divi(a,b) {
	
	int divi=a/b;
	printf(" division is: %d\n",divi);
}
void mod(a,b) {
	
	int mod=a%b;
	printf(" modulus is: %d\n",mod);
}


----------------------------------------------------------------
Q5. 
a : add() 
s : sub()
m :multi()
o :mod() 
d :div()


#include<stdio.h>

void add(int a, int b);
void sub(int a, int b);
void multi(int a,int b);
void divi(int a,int b);
void mod(int a,int b);

int main() {
    char ch;
    printf("enter a character:");
    scanf("%c",&ch);
    if(ch=='a'){
	add(7,9);
        
    }
    else if(ch=='s'){
	sub(22,11);
    }
    else if(ch=='m'){
	multi(7,6);
    }
    else if(ch=='d'){
	divi(18,3);
    }
    else if(ch=='M'){
	mod(17,3);
    }
    else{
        printf("invalid");
    }
	return 0;
}
void add(a,b) {

	int sum=a+b;
	printf(" addition is: %d\n",sum);
}
void sub(a,b) {
	
	int sub=a-b;
	printf(" subtraction is: %d\n",sub);
}
void multi(a,b) {
	
	int multi=a*b;
	printf(" multipication is: %d\n",multi);
}
void divi(a,b) {
	
	int divi=a/b;
	printf(" division is: %d\n",divi);
}
void mod(a,b) {

	int mod=a%b;
	printf(" modulus is: %d\n",mod);
}
----------------------------------------------------------------

Q6. 
s :swap() 
a :Armstrong()
p :palindrome()
r :reverse()
f :factorial()
b :Fibonacci()
t :table() 
  

#include<stdio.h>

  void swap(int a,int b);
  void Armstrong(int num);
  void palindrome(int num);
  void reverse(int num);
  void factorial(int n);
  void Fibonacci(int x,int y);
  void table(int y);
  
  int main(){
      char ch;
      printf("enter a character:");
      scanf("%c",&ch);
      if(ch=='s'){
          swap(9,5);
          
      }
      else if(ch=='a'){
       Armstrong(153);
      }
      else if(ch=='p'){
       palindrome(1223221);
      }
      else if(ch=='r'){
       reverse(236789);
      }
      else if(ch=='f'){
       factorial(1);
      }
      else if(ch=='F'){
       Fibonacci(0,1);
      }
      else if(ch=='t'){
      table(5);
          
      }
  return 0;
  } 
  
   void swap(int a,int b) {
       int c;
       
     c=a;
     a=b;
     b=c;
    printf(" swapping: a = %d, b = %d\n", a, b);
        
    }

  void Armstrong(int num){
      
int rem,sum=0;
int temp=num;
while(num>0){
rem=num%10;
sum=sum+rem*rem*rem;
num=num/10;
}
printf(" %d\n",sum);
if(sum==temp){
printf("Armstrong");
}else{
printf("is not Armstrong");
}

  }
  void palindrome(int num){
     
     
int rem,sum=0;
int temp=num;
while(num>0){
rem=num%10;
sum=sum*10+rem;
num=num/10;
}
 printf("%d\n",sum);
if(sum==temp){
printf("palindrom");

}else{
printf("is not palindrom");
}

  }
  void reverse( int num){
      
    int rem,sum=0;
    while(num>0){
        rem=num%10;
        sum=sum*10+rem;
        num=num/10;
    }
    printf("%d",sum);

  }
  void factorial( int n){
      
      int fact=1;
      while(n<=5){
          fact=fact*n;
          n++;
      }
      printf(" factorial is:%d",fact);
  }
  void Fibonacci(int x,int y){
      int z;
      printf("%d\n%d\n",x,y);
      for(int i=1;i<=10;i++){
      z=x+y;
      printf("%d\n",z);
      x=y;
      y=z;
      }
  }
  void table(int y){
      int x;
      x=1;
     
      while(x<=10){

      printf("%d\n",y*x);
      x++;
      } 

  }
-------------------------------------------------------------------------------------------------------------------